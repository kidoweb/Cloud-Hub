// js/payment.js

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ Firebase
import { db, auth } from './firebase-config.js';
import {
  collection,
  addDoc,
  doc,
  getDoc,
  setDoc,
} from 'https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js';
import { onAuthStateChanged } from 'https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js';

// –≠–ª–µ–º–µ–Ω—Ç—ã
const paymentForm = document.getElementById('payment-form');
const errorContainer = document.getElementById('payment-error'); // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ HTML
const notification = document.getElementById('notification'); // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ HTML

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'success') {
  if (notification) {
    notification.textContent = message;
    notification.className = `notification ${type}`;
    notification.style.display = 'block';
    setTimeout(() => {
      notification.style.display = 'none';
    }, 3000);
  } else {
    // Fallback to alert if notification —ç–ª–µ–º–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    alert(message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
function safeParseJSON(data) {
  try {
    return JSON.parse(data);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', error);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç—ã
function validateCard(number, expiry, cvv) {
  const cardNumberRegex = /^\d{13,19}$/;
  const cardExpiryRegex = /^(0[1-9]|1[0-2])\/\d{2}$/;
  const cardCvvRegex = /^\d{3,4}$/;

  const [month, year] = expiry.split('/');
  if (!month || !year) return false;
  const expiryDate = new Date(`20${year}`, month - 1);

  const currentDate = new Date();
  currentDate.setDate(1); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–Ω—å –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞

  return (
    cardNumberRegex.test(number) &&
    cardExpiryRegex.test(expiry) &&
    expiryDate >= currentDate &&
    cardCvvRegex.test(cvv) &&
    luhnCheck(number)
  );
}

// –ê–ª–≥–æ—Ä–∏—Ç–º –õ—É–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã
function luhnCheck(val) {
  let sum = 0;
  for (let i = 0; i < val.length; i++) {
    let intVal = parseInt(val.substr(i, 1));
    if (i % 2 === val.length % 2) {
      intVal *= 2;
      if (intVal > 9) intVal -= 9;
    }
    sum += intVal;
  }
  return sum % 10 === 0;
}

// –§—É–Ω–∫—Ü–∏—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã
function maskCardNumber(number) {
  return number.replace(/\d{12}(\d{4})/, '**** **** **** $1');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –ø–ª–∞—Ç–µ–∂–Ω—ã–º —à–ª—é–∑–æ–º)
async function processPayment(cardNumber, cardExpiry, cardCvv) {
  // –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
  return new Promise((resolve) => {
    setTimeout(() => {
      // –ü—Ä–æ—Å—Ç–∞—è —Å–∏–º—É–ª—è—Ü–∏—è: –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç, –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è —Ü–∏—Ñ—Ä–∞ —á—ë—Ç–Ω–∞—è
      const lastDigit = parseInt(cardNumber.slice(-1), 10);
      resolve(lastDigit % 2 === 0);
    }, 1000);
  });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
if (paymentForm) {
  paymentForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
    if (errorContainer) errorContainer.textContent = '';

    const cardNumber = paymentForm['card-number'].value.replace(/\s+/g, '');
    const cardExpiry = paymentForm['card-expiry'].value;
    const cardCvv = paymentForm['card-cvv'].value;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç—ã
    if (!validateCard(cardNumber, cardExpiry, cardCvv)) {
      const errorMessage = '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä, —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏ CVV.';
      if (errorContainer) {
        errorContainer.textContent = errorMessage;
      } else {
        showNotification(errorMessage, 'error');
      }
      return;
    }

    try {
      const orderData = safeParseJSON(sessionStorage.getItem('orderData'));
      if (!orderData) {
        showNotification('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞.', 'error');
        window.location.href = 'cart.html';
        return;
      }

      const user = auth.currentUser;
      if (!user) {
        showNotification('üîí –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç.', 'error');
        window.location.href = 'login.html';
        return;
      }

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞
      const paymentSuccess = await processPayment(cardNumber, cardExpiry, cardCvv);
      if (!paymentSuccess) {
        const errorMessage = '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–ª–∞—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã.';
        if (errorContainer) {
          errorContainer.textContent = errorMessage;
        } else {
          showNotification(errorMessage, 'error');
        }
        return;
      }

      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–ø–ª–∞—Ç—ã –≤ orderData
      orderData.paymentDetails = {
        cardNumber: maskCardNumber(cardNumber),
        cardExpiry: cardExpiry,
      };

      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –≤ Firestore
      const ordersCollection = collection(db, 'orders');
      const newOrderRef = await addDoc(ordersCollection, orderData);

      // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
      const cartRef = doc(db, 'carts', user.uid);
      await setDoc(cartRef, { items: [] });

      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const successMessage = `‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω. ID –∑–∞–∫–∞–∑–∞: ${newOrderRef.id}`;
      showNotification(successMessage, 'success');

      // –û—á–∏—Å—Ç–∫–∞ sessionStorage
      sessionStorage.removeItem('orderData');

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        window.location.href = 'index.html';
      }, 3000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã:', error);
      const errorMessage = '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–ª–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      if (errorContainer) {
        errorContainer.textContent = errorMessage;
      } else {
        showNotification(errorMessage, 'error');
      }
    }
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  onAuthStateChanged(auth, async (user) => {
    if (!user) {
      showNotification('üîí –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.', 'error');
      window.location.href = 'login.html';
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≥–ª–æ–±–∞–ª—å–Ω–æ
window.addEventListener('error', (event) => {
  console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', event.error);
  showNotification('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', 'error');
});
